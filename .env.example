# Doom-scrolling Storyteller Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED SETTINGS
# =============================================================================

# OpenRouter API Key (REQUIRED)
# Get your API key from https://openrouter.ai/
OPENROUTER_API_KEY=your-openrouter-api-key-here

# Flask Secret Key (REQUIRED for sessions)
# Generate a secure random string for production
# You can use: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-secure-secret-key-change-this-in-production

# =============================================================================
# OPTIONAL SETTINGS
# =============================================================================

# OpenRouter Model Configuration
# You can configure different models for different types of requests for cost/performance optimization

# Default fallback model (used when specific models not configured)
# Popular options: openai/gpt-4o-mini, openai/gpt-4o, anthropic/claude-3-haiku
OPENROUTER_MODEL_DEFAULT=openai/gpt-4o-mini

# Model for story generation (initial stories and story segments)
# Use creative, high-quality models for best storytelling
# Examples: openai/gpt-4o, anthropic/claude-3-5-sonnet, meta-llama/llama-3.1-405b
OPENROUTER_MODEL_STORY_GENERATION=openai/gpt-4o-mini

# Model for story summarization
# Can use faster/cheaper models since summaries are more straightforward
# Examples: openai/gpt-4o-mini, anthropic/claude-3-haiku, meta-llama/llama-3.1-70b
OPENROUTER_MODEL_STORY_SUMMARY=openai/gpt-4o-mini

# Model for storyline options generation (JSON format)
# Use models good at structured output and following instructions precisely
# Examples: openai/gpt-4o, anthropic/claude-3-5-sonnet, openai/gpt-4o-mini
OPENROUTER_MODEL_STORYLINE_OPTIONS=openai/gpt-4o-mini

# Legacy environment variable (deprecated but still supported for backward compatibility)
# Will be used as fallback if OPENROUTER_MODEL_DEFAULT is not set
OPENROUTER_MODEL=openai/gpt-4o-mini

# Story Optimization Settings
# Number of story segments before generating a summary (default: 5)
SUMMARY_WINDOW_SIZE=5

# Number of recent segments to keep with summary (default: 2)
RECENT_SEGMENTS_COUNT=2

# Session Optimization
# Enable automatic session cleanup to prevent memory bloat (default: true)
OPTIMIZE_SESSIONS=true

# Maximum session data size in KB before optimization (default: 50)
MAX_SESSION_SIZE_KB=50

# Maximum number of segments to keep in session (default: 10)
MAX_SEGMENTS_IN_SESSION=10

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL (default: INFO)
LOG_LEVEL=INFO

# Enable file logging (default: true)
LOG_TO_FILE=true

# Directory for log files (default: logs)
LOG_DIRECTORY=logs

# Maximum size of each log file in bytes (default: 10MB)
LOG_MAX_BYTES=10485760

# Number of backup log files to keep (default: 5)
LOG_BACKUP_COUNT=5

# Include LLM responses in logs (default: true)
# Set to false to reduce log file size
LOG_INCLUDE_RESPONSES=true

# Maximum length for truncated text in logs (default: 500)
LOG_TRUNCATE_LENGTH=500

# =============================================================================
# STORY CUSTOMIZATION
# =============================================================================

# Custom Badge Categories (comma-separated)
# If not set, will use built-in defaults

# Mood badges
BADGE_CATEGORIES_MOOD=mysterious,romantic,funny,dark,heartwarming,melancholy,uplifting

# Genre badges
BADGE_CATEGORIES_GENRE=sci-fi,fantasy,horror,thriller,western,mystery,romance

# Intensity/Style badges
BADGE_CATEGORIES_INTENSITY=action-packed,slow-burn,explosive,intimate,epic,minimalist

# Spice level badges
BADGE_CATEGORIES_SPICY=passionate,seductive,dangerous,forbidden,innocent,playful

# =============================================================================
# CHARACTER CUSTOMIZATION
# =============================================================================

# Custom Character Categories (comma-separated)
# If not set, will use built-in defaults

# Character archetypes
CHARACTER_CATEGORIES_ARCHETYPES=hero,villain,mentor,trickster,innocent,explorer,rebel

# Character traits
CHARACTER_CATEGORIES_TRAITS=mysterious stranger,reluctant hero,femme fatale,comic relief,wise elder,hot-headed youth

# Character relationships
CHARACTER_CATEGORIES_RELATIONSHIPS=enemies-to-lovers,mentor-student,rivals,siblings,star-crossed,unlikely allies

# =============================================================================
# SD WEB UI API CONFIGURATION
# =============================================================================

# Enable SD Web UI API integration for chapter ornament images (default: true)
# Set to false to disable image generation entirely
SDWEBUI_ENABLED=true

# SD Web UI API host (default: 127.0.0.1)
SDWEBUI_HOST=127.0.0.1

# SD Web UI API port (default: 7860)
SDWEBUI_PORT=7860

# Use HTTPS for SD Web UI API (default: false)
SDWEBUI_USE_HTTPS=false

# SD Web UI API timeout in seconds (default: 60)
SDWEBUI_TIMEOUT=60

# Image generation style prompt for chapter ornaments
# This will be combined with story-based prompts
IMAGE_STYLE_PROMPT=ornamental border, decorative chapter heading, elegant manuscript illumination, medieval manuscript style, intricate detailed border design, fantasy art, high quality

# Image generation parameters
IMAGE_WIDTH=512
IMAGE_HEIGHT=256
IMAGE_STEPS=20
IMAGE_CFG_SCALE=7.0

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Flask Debug Mode (default: false in production)
# Only set to true for development
FLASK_DEBUG=false

# Flask Host (default: 127.0.0.1)
FLASK_HOST=127.0.0.1

# Flask Port (default: 5000)
FLASK_PORT=5000